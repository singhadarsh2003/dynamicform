{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adarsh Singh\\\\Desktop\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css'; // Hardcoded mock API responses\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiResponses = {\n  userInformation: {\n    fields: [{\n      name: \"firstName\",\n      type: \"text\",\n      label: \"First Name\",\n      required: true\n    }, {\n      name: \"lastName\",\n      type: \"text\",\n      label: \"Last Name\",\n      required: true\n    }, {\n      name: \"age\",\n      type: \"number\",\n      label: \"Age\",\n      required: false\n    }]\n  },\n  addressInformation: {\n    fields: [{\n      name: \"street\",\n      type: \"text\",\n      label: \"Street\",\n      required: true\n    }, {\n      name: \"city\",\n      type: \"text\",\n      label: \"City\",\n      required: true\n    }, {\n      name: \"state\",\n      type: \"dropdown\",\n      label: \"State\",\n      options: [\"California\", \"Texas\", \"New York\"],\n      required: true\n    }, {\n      name: \"zipCode\",\n      type: \"text\",\n      label: \"Zip Code\",\n      required: false\n    }]\n  },\n  paymentInformation: {\n    fields: [{\n      name: \"cardNumber\",\n      type: \"text\",\n      label: \"Card Number\",\n      required: true\n    }, {\n      name: \"expiryDate\",\n      type: \"date\",\n      label: \"Expiry Date\",\n      required: true\n    }, {\n      name: \"cvv\",\n      type: \"password\",\n      label: \"CVV\",\n      required: true\n    }, {\n      name: \"cardholderName\",\n      type: \"text\",\n      label: \"Cardholder Name\",\n      required: true\n    }]\n  }\n};\n\nconst App = () => {\n  _s();\n\n  const [selectedForm, setSelectedForm] = useState('');\n  const [formData, setFormData] = useState({});\n  const [formError, setFormError] = useState('');\n  const [submittedData, setSubmittedData] = useState([]);\n\n  const handleFormChange = event => {\n    setSelectedForm(event.target.value);\n    setFormData({});\n    setFormError('');\n  };\n\n  const handleInputChange = event => {\n    setFormData({ ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const currentForm = apiResponses[selectedForm];\n    if (!currentForm) return; // Validate required fields\n\n    const missingFields = currentForm.fields.filter(field => field.required && !formData[field.name]);\n\n    if (missingFields.length > 0) {\n      setFormError('Please fill in all required fields.');\n      return;\n    } // If validation passes, submit data\n\n\n    setSubmittedData([...submittedData, formData]);\n    setFormData({});\n    setFormError('');\n    alert('Form submitted successfully!');\n  };\n\n  const handleDelete = index => {\n    const newData = [...submittedData];\n    newData.splice(index, 1);\n    setSubmittedData(newData);\n    alert('Entry deleted successfully');\n  };\n\n  const handleEdit = index => {\n    setFormData(submittedData[index]);\n    setSubmittedData(submittedData.filter((_, i) => i !== index));\n  };\n\n  const renderFields = () => {\n    const currentForm = apiResponses[selectedForm];\n    if (!currentForm) return null;\n    return currentForm.fields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: field.name,\n        children: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), field.type === 'dropdown' ? /*#__PURE__*/_jsxDEV(\"select\", {\n        name: field.name,\n        id: field.name,\n        value: formData[field.name] || '',\n        onChange: handleInputChange,\n        required: field.required,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: [\"Select \", field.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), field.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: field.type,\n        name: field.name,\n        id: field.name,\n        value: formData[field.name] || '',\n        onChange: handleInputChange,\n        required: field.required\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), formError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: formError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 23\n      }, this)]\n    }, field.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dynamic Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"formType\",\n        children: \"Choose Form Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"formType\",\n        value: selectedForm,\n        onChange: handleFormChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"userInformation\",\n          children: \"User Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"addressInformation\",\n          children: \"Address Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"paymentInformation\",\n          children: \"Payment Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), selectedForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [renderFields(), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Submitted Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: submittedData.map((data, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: JSON.stringify(data)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(index),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Iz3kDrbg3ehIzQ5NHbbxMQTKWXk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Adarsh Singh/Desktop/my-app/src/App.js"],"names":["React","useState","apiResponses","userInformation","fields","name","type","label","required","addressInformation","options","paymentInformation","App","selectedForm","setSelectedForm","formData","setFormData","formError","setFormError","submittedData","setSubmittedData","handleFormChange","event","target","value","handleInputChange","handleSubmit","preventDefault","currentForm","missingFields","filter","field","length","alert","handleDelete","index","newData","splice","handleEdit","_","i","renderFields","map","option","data","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// Hardcoded mock API responses\nconst apiResponses = {\n  userInformation: {\n    fields: [\n      { name: \"firstName\", type: \"text\", label: \"First Name\", required: true },\n      { name: \"lastName\", type: \"text\", label: \"Last Name\", required: true },\n      { name: \"age\", type: \"number\", label: \"Age\", required: false }\n    ]\n  },\n  addressInformation: {\n    fields: [\n      { name: \"street\", type: \"text\", label: \"Street\", required: true },\n      { name: \"city\", type: \"text\", label: \"City\", required: true },\n      { name: \"state\", type: \"dropdown\", label: \"State\", options: [\"California\", \"Texas\", \"New York\"], required: true },\n      { name: \"zipCode\", type: \"text\", label: \"Zip Code\", required: false }\n    ]\n  },\n  paymentInformation: {\n    fields: [\n      { name: \"cardNumber\", type: \"text\", label: \"Card Number\", required: true },\n      { name: \"expiryDate\", type: \"date\", label: \"Expiry Date\", required: true },\n      { name: \"cvv\", type: \"password\", label: \"CVV\", required: true },\n      { name: \"cardholderName\", type: \"text\", label: \"Cardholder Name\", required: true }\n    ]\n  }\n};\n\nconst App = () => {\n  const [selectedForm, setSelectedForm] = useState('');\n  const [formData, setFormData] = useState({});\n  const [formError, setFormError] = useState('');\n  const [submittedData, setSubmittedData] = useState([]);\n\n  const handleFormChange = (event) => {\n    setSelectedForm(event.target.value);\n    setFormData({});\n    setFormError('');\n  };\n\n  const handleInputChange = (event) => {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const currentForm = apiResponses[selectedForm];\n    if (!currentForm) return;\n\n    // Validate required fields\n    const missingFields = currentForm.fields.filter(field => field.required && !formData[field.name]);\n    if (missingFields.length > 0) {\n      setFormError('Please fill in all required fields.');\n      return;\n    }\n\n    // If validation passes, submit data\n    setSubmittedData([...submittedData, formData]);\n    setFormData({});\n    setFormError('');\n    alert('Form submitted successfully!');\n  };\n\n  const handleDelete = (index) => {\n    const newData = [...submittedData];\n    newData.splice(index, 1);\n    setSubmittedData(newData);\n    alert('Entry deleted successfully');\n  };\n\n  const handleEdit = (index) => {\n    setFormData(submittedData[index]);\n    setSubmittedData(submittedData.filter((_, i) => i !== index));\n  };\n\n  const renderFields = () => {\n    const currentForm = apiResponses[selectedForm];\n    if (!currentForm) return null;\n\n    return currentForm.fields.map((field) => (\n      <div key={field.name} className=\"form-group\">\n        <label htmlFor={field.name}>{field.label}</label>\n        {field.type === 'dropdown' ? (\n          <select\n            name={field.name}\n            id={field.name}\n            value={formData[field.name] || ''}\n            onChange={handleInputChange}\n            required={field.required}\n          >\n            <option value=\"\">Select {field.label}</option>\n            {field.options.map((option, index) => (\n              <option key={index} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        ) : (\n          <input\n            type={field.type}\n            name={field.name}\n            id={field.name}\n            value={formData[field.name] || ''}\n            onChange={handleInputChange}\n            required={field.required}\n          />\n        )}\n        {formError && <p className=\"error\">{formError}</p>}\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic Form</h1>\n\n      <div className=\"form-selection\">\n        <label htmlFor=\"formType\">Choose Form Type:</label>\n        <select\n          id=\"formType\"\n          value={selectedForm}\n          onChange={handleFormChange}\n        >\n          <option value=\"\">Select Form</option>\n          <option value=\"userInformation\">User Information</option>\n          <option value=\"addressInformation\">Address Information</option>\n          <option value=\"paymentInformation\">Payment Information</option>\n        </select>\n      </div>\n\n      {selectedForm && (\n        <form onSubmit={handleSubmit}>\n          {renderFields()}\n          <button type=\"submit\">Submit</button>\n        </form>\n      )}\n\n      <h2>Submitted Data</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Data</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {submittedData.map((data, index) => (\n            <tr key={index}>\n              <td>{JSON.stringify(data)}</td>\n              <td>\n                <button onClick={() => handleEdit(index)}>Edit</button>\n                <button onClick={() => handleDelete(index)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}